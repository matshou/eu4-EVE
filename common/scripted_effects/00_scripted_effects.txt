#Unsorted Scripted effects:

#General effect for extending or adding province modifier
#Province Scope
add_or_extend_province_modifier_effect = {
	if = {
		limit = {
			has_province_modifier = $MODIFIER$
		}
		extend_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
	else = {
		add_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
}

#Used in army professionalism event:
#used where FROM is a province and ROOT is a country, ie onaction for provinces fallen
add_loot_from_province_effect = { 
	if = {
		limit = {
			FROM = {
				NOT = { development = 18 }
			}
		}
		add_treasury = 115
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 18
				NOT = { development = 21 }
			}
		}
		add_treasury = 135
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 21
				NOT = { development = 24 }
			}
		}
		add_treasury = 155
		add_mil_power = 25
	}
	if = {
		limit = {
			FROM = {
				development = 24
				NOT = { development = 27 }
			}
		}
		add_treasury = 180
		add_mil_power = 30
	}
	if = {
		limit = {
			FROM = {
				development = 27
				NOT = { development = 30 }
			}
		}
		add_treasury = 210
		add_mil_power = 40
	}
	if = {
		limit = {
			FROM = {
				development = 30
				NOT = { development = 33 }
			}
		}
		add_treasury = 230
		add_mil_power = 50
	}
	if = {
		limit = {
			FROM = {
				development = 33
			}
		}
		add_treasury = 250
		add_mil_power = 55
	}
}

#Generalized version of the same effect, for use in province scope.
#used where ROOT is a province, ie onaction for provinces fallen
#$LOOTER$ is the scope of the tag performing the Looting (so for instance owner)
add_loot_from_rich_province_general_effect = { 
	add_devastation = 80
	if = {
		limit = {
			NOT = { development = 18 }
		}
		$LOOTER$ = {
			add_treasury = 400
			add_mil_power = 15
		}
	}
	if = {
		limit = {
			development = 18
			NOT = { development = 21 }
		}
		$LOOTER$ = {
			add_treasury = 435
			add_mil_power = 15
		}
	}
	if = {
		limit = {
			development = 21
			NOT = { development = 24 }
		}
		$LOOTER$ = {
			add_treasury = 455
			add_mil_power = 25
		}
	}
	if = {
		limit = {
			development = 24
			NOT = { development = 27 }
		}
		$LOOTER$ = {
			add_treasury = 480
			add_mil_power = 30
		}
	}
	if = {
		limit = {
			development = 27
			NOT = { development = 30 }
		}
		$LOOTER$ = {
			add_treasury = 510
			add_mil_power = 40
		}
	}
	if = {
		limit = {
			development = 30
			NOT = { development = 33 }
		}
		$LOOTER$ = {
			add_treasury = 530
			add_mil_power = 50
		}
	}
	if = {
		limit = {
			development = 33
		}
		$LOOTER$ = {
			add_treasury = 550
			add_mil_power = 55
		}
	}
}

#Religious Schools:
#Country Scope
clear_religious_scholar_modifiers_effect = {
	remove_country_modifier = hanafi_scholar_modifier
	remove_country_modifier = hanbali_scholar_modifier
	remove_country_modifier = maliki_scholar_modifier
	remove_country_modifier = shafii_scholar_modifier
	remove_country_modifier = ismaili_scholar_modifier
	remove_country_modifier = jafari_scholar_modifier
	remove_country_modifier = zaidi_scholar_modifier
}

#Move capital along with all that also needs to be done. Used in capital decisions.
#THIS = Province Scope, ROOT = Country Scope
move_capital_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			ROOT = {
				is_part_of_hre = no
			}
		}
		set_in_empire = no
		emperor = {
			add_opinion = {
				who = ROOT
				modifier = hre_province_left
			}
		}
		add_imperial_influence = -1
	}
	ROOT = { set_capital = PREV }
}

remove_non_electors_emperors_from_empire_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			is_elector = no
			is_emperor = no
		}
		custom_tooltip = remove_non_electors_emperors_from_empire_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					is_part_of_hre = yes
				}
				set_in_empire = no
			}
		}
	}
}

develop_estate_land = {
	if = {
		limit = {
			AND = {
				has_estate = estate_burghers
				NOT = { owner = { has_country_modifier = estate_developed_burghers } }
			}
		}
		owner = {
			add_country_modifier = {
				name = estate_developed_burghers
				duration = 60
				desc = EST_VAL_DEVELOPED
				hidden = yes
			}
		}
	}
	else_if = {
		limit = {
			AND = {
				has_estate = estate_church
				NOT = { owner = { has_country_modifier = estate_developed_church } }
			}
		}
		owner = {
			add_country_modifier = {
				name = estate_developed_church
				duration = 60
				desc = EST_VAL_DEVELOPED
				hidden = yes
			}
		}
	}
	else_if = {
		limit = {
			AND = {
				has_estate = estate_nobles
				NOT = { owner = { has_country_modifier = estate_developed_nobles } }
			}
		}
		owner = {
			add_country_modifier = {
				name = estate_developed_nobles
				duration = 60
				desc = EST_VAL_DEVELOPED
				hidden = yes
			}
		}
	}
}

##################################
# EVE - Core Scripts
##################################

# Scope: country
reset_monthly_pulse = {
	set_variable = { which = month_pulse_eta value = 30 }
}

# Scope: country
# The monthly pulse will fire the NEXT day in capital province
fire_monthly_pulse = {
	set_variable = { which = month_pulse_eta value = 0 }
	log = "EVE: [This.GetName] ordered an immediate monthly pulse"  #Debug
}

# Scope: country
# Called from 'on_startup' to determine the initial number of provinces for each country
# Each month this value is compared with the current num of provinces to check for territorial change
#
set_initial_province_num = {
	set_variable = { 
		which = num_of_provinces value = 0 
	}
	every_owned_province = { 
		change_variable = { which = num_of_provinces value = 1 } 
	}
}

##################################
# EVE - Autonomy Scripts
##################################

# Scope: country
# Called on each monthly pulse to check if country gained or lost territory
check_for_territorial_change = {
	set_variable = { 
		which = counter_var value = 0 
	}
	every_owned_province = {
		change_variable = {
			which = counter_var value = 1
		}
	}
	if = {
		limit = { NOT = { is_variable_equal = {
			which = num_of_provinces which = counter_var } }
		}
		set_country_flag = territorial_change
	}
}

# Scope: country
# Called once after a country moves its capital to another province
changed_capital_province = {
	capital_scope = {
		add_province_triggered_modifier = monthly_pulse
	}
	set_country_flag = territorial_change
	fire_monthly_pulse = yes
}

# Scope: country 
# Should ONLY be called from a provice with ROOT as that province
#
calc_country_dist_autonomy = {
	log = "EVE: [This.GetName]: calculate autonomy based on distance from ([Root.GetName])."  #Debug
	
	every_owned_province = {
		if = { 
			limit = { has_province_flag = distant_province }
			remove_distance_modifier = yes
		}
		set_province_dist_autonomy = yes
	}
	clr_country_flag = territorial_change
}

# Scope: province
# Called when recalculating province distance autonomy
remove_distance_modifier = {
	if = {
		limit = { has_province_modifier = prov_autonomy_from_dist_50 }
		remove_province_modifier = prov_autonomy_from_dist_50
	}
	else_if = {
		limit = { has_province_modifier = prov_autonomy_from_dist_100 }
		remove_province_modifier = prov_autonomy_from_dist_100
	}
	else_if = {
		limit = { has_province_modifier = prov_autonomy_from_dist_150 }
		remove_province_modifier = prov_autonomy_from_dist_150
	}
	else_if = {
		limit = { has_province_modifier = prov_autonomy_from_dist_200 }
		remove_province_modifier = prov_autonomy_from_dist_200
	}
	else_if = {
		limit = { has_province_modifier = prov_autonomy_from_dist_250 }
		remove_province_modifier = prov_autonomy_from_dist_250
	}
	else_if = {
		limit = { has_province_modifier = prov_autonomy_from_dist_300 }
		remove_province_modifier = prov_autonomy_from_dist_300
	}
	else_if = {
		limit = { has_province_modifier = prov_autonomy_from_dist_350 }
		remove_province_modifier = prov_autonomy_from_dist_350
	}
	else = {
		# called method but province doesn't have a distance modifier
		owner = { log = "EVE: ERROR(invalid call to remove modifier from province [Root.GetName] by [This.GetName])" }
	}		
}
	
# Scope: province
# Add autonomy modifiers based on province distance from capital
# Should ONLY be called from capital provinces (registered for monthly pulses)
#
set_province_dist_autonomy = {
	
	# will be removed if the province is not distant
	set_province_flag = distant_province
	
	if = {
		limit = { province_distance = { who = ROOT distance = 350 } }
		add_province_modifier = { name = "prov_autonomy_from_dist_350" duration = -1 }
	}
	else_if = {
		limit = { province_distance = { who = ROOT distance = 300 } }
		add_province_modifier = { name = "prov_autonomy_from_dist_300" duration = -1 }
	}
	else_if = {
		limit = { province_distance = { who = ROOT distance = 250 } }
		add_province_modifier = { name = "prov_autonomy_from_dist_250" duration = -1 }
	}
	else_if = {
		limit = { province_distance = { who = ROOT distance = 200 } }
		add_province_modifier = { name = "prov_autonomy_from_dist_200" duration = -1 }
	}
	else_if = {
		limit = { province_distance = { who = ROOT distance = 150 } }
		add_province_modifier = { name = "prov_autonomy_from_dist_150" duration = -1 }
	}
	else_if = {
		limit = { province_distance = { who = ROOT distance = 100 } }
		add_province_modifier = { name = "prov_autonomy_from_dist_100" duration = -1 }
	}
	else_if = {
		limit = { province_distance = { who = ROOT distance = 50 } }
		add_province_modifier = { name = "prov_autonomy_from_dist_50" duration = -1 }
	}
	# province is in the capital zone and shouldn't have a distance modifier
	else = { clr_province_flag = distant_province }
}
